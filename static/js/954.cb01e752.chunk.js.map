{"version":3,"file":"static/js/954.cb01e752.chunk.js","mappings":"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","sources":["layouts/AdminLayout/NavBar/NavItem.js","layouts/AdminLayout/NavBar/index.js","layouts/AdminLayout/TopBar.js","layouts/AdminLayout/index.js"],"sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  ListItem,\n  makeStyles\n} from '@material-ui/core';\nimport Swal from \"sweetalert2\";\nimport { useSelector } from 'react-redux';\nimport { useLocation, useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  item: {\n    display: 'flex',\n    paddingTop: 0,\n    paddingBottom: 0,\n    position: \"relative\",\n    zIndex: 1201,\n  },\n  button: {\n    color: theme.palette.text.secondary,\n    fontWeight: theme.typography.fontWeightMedium,\n    justifyContent: 'flex-start',\n    letterSpacing: 0,\n    padding: '10px 8px',\n    textTransform: 'none',\n    width: '100%'\n  },\n  icon: {\n    marginRight: theme.spacing(1)\n  },\n  title: {\n    marginRight: 'auto'\n  },\n  active: {\n    color: theme.palette.primary.main,\n    '& $title': {\n      fontWeight: theme.typography.fontWeightMedium\n    },\n    '& $icon': {\n      color: theme.palette.primary.main\n    }\n  }\n}));\n\nconst NavItem = ({\n  className,\n  href,\n  icon: Icon,\n  title,\n  ...rest\n}) => {\n  const isExistUserModified = useSelector((state) => state.usersManagementReducer.isExistUserModified);\n  const classes = useStyles();\n  const history = useHistory();\n  let location = useLocation();\n  const onChangePageManagement = () => {\n    if (isExistUserModified && location.pathname === \"/admin/users\" && href !== \"/admin/users\") {\n      Swal.fire({\n        title: 'Dữ liệu đã chỉnh sửa sẽ bị mất khi chuyển trang?',\n        text: \"Bạn không thể hoàn nguyên!\",\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: '#d33',\n        cancelButtonColor: '#3085d6',\n        confirmButtonText: 'Chuyển trang!',\n        cancelButtonText: 'Ở lại!'\n      }).then((result) => {\n        if (result.isConfirmed) {\n          history.push(href);\n        }\n      })\n    } else {\n      history.push(href);\n    }\n  }\n  return (\n    <ListItem\n      className={clsx(classes.item, className)}\n      disableGutters\n      {...rest}\n    >\n      <Button\n        className={clsx(classes.button, location.pathname === href && classes.active)}\n        onClick={onChangePageManagement}\n      >\n        {Icon && (\n          <Icon\n            className={classes.icon}\n            size=\"20\"\n          />\n        )}\n        <span className={classes.title}>\n          {title}\n        </span>\n      </Button>\n    </ListItem>\n  );\n};\n\nNavItem.propTypes = {\n  className: PropTypes.string,\n  href: PropTypes.string,\n  icon: PropTypes.elementType,\n  title: PropTypes.string\n};\n\nexport default NavItem;\n","import React, { useEffect } from 'react';\n\nimport MovieIcon from '@material-ui/icons/Movie';\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\nimport PostAddIcon from '@material-ui/icons/PostAdd';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Divider,\n  Drawer,\n  Hidden,\n  List,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport { useSelector } from 'react-redux';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport NavItem from './NavItem';\nimport { FAKE_AVATAR } from '../../../constants/config';\n\nconst items = [\n  {\n    href: '/admin/movies',\n    icon: MovieIcon,\n    title: 'Quản lý Phim'\n  },\n  {\n    href: '/admin/users',\n    icon: PeopleAltIcon,\n    title: 'Quản lý người dùng'\n  },\n  {\n    href: '/admin/showtimes',\n    icon: PostAddIcon,\n    title: 'Tạo lịch chiếu'\n  },\n];\n\nconst useStyles = makeStyles(() => ({\n  mobileDrawer: {\n    width: 256\n  },\n  desktopDrawer: {\n    width: 256,\n    top: 64,\n    height: 'calc(100% - 64px)'\n  },\n  avatar: {\n    cursor: 'pointer',\n    width: 64,\n    height: 64\n  }\n}));\n\nexport default function NavBar({ onMobileClose, openMobile }) {\n  const classes = useStyles();\n  const location = useLocation();\n  const history = useHistory();\n  const { currentUser } = useSelector((state) => state.authReducer);\n\n  useEffect(() => {\n    if (openMobile && onMobileClose) {\n      onMobileClose();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [location.pathname]);\n\n  const user = {\n    avatar: FAKE_AVATAR,\n    jobTitle: 'Senior Developer',\n    name: currentUser?.hoTen,\n  };\n\n  const handleUser = () => {\n    history.push(\"/taikhoan\")\n  }\n\n\n  // đây là nội dung cột bên trái\n  const content = (\n\n    // cái này là div để dàn thành cột\n    <Box\n      height=\"100%\"\n      display=\"flex\"\n      flexDirection=\"column\"\n    >\n      {/* đây là phần logo avatar user và tên user */}\n      <Box\n        // căn giữa cột\n        alignItems=\"center\"\n        display=\"flex\"\n        flexDirection=\"column\"\n        p={2} // padding 2\n      >\n        <Tooltip title=\"Thông tin tài khoản\">\n          <Avatar\n            className={classes.avatar}\n            src={user.avatar}\n            onClick={handleUser}\n          />\n        </Tooltip>\n        <Typography\n          className={classes.name}\n          color=\"textPrimary\"\n          variant=\"h5\"\n        >\n          {user.name}\n        </Typography>\n        <Typography\n          color=\"textSecondary\"\n          variant=\"body2\"\n        >\n          {user.jobTitle}\n        </Typography>\n      </Box>\n      <Divider />\n\n      {/* đây là phần menu lựa chọn */}\n      <Box p={2}>\n        <List>\n          {items.map((item) => (\n            // NavItem hiện thị ra icon và title\n            <NavItem\n              href={item.href}\n              key={item.title}\n              title={item.title}\n              icon={item.icon}\n            />\n          ))}\n        </List>\n      </Box>\n    </Box>\n  );\n\n  return (\n    <>\n\n      {/* đây là giao diện mobile */}\n      <Hidden lgUp>\n        <Drawer\n          anchor=\"left\"\n          classes={{ paper: classes.mobileDrawer }}\n          onClose={onMobileClose}\n          open={openMobile} // đóng mở tùy thuộc vào bạn click\n          variant=\"temporary\" // kiểu temporary có một lớp phủ mờ hiện ra cho đến khi bạn chọn xong thì Drawer mới đóng lại\n        >\n          {content}\n        </Drawer>\n\n      </Hidden>\n      {/* đây là giao diện desktop */}\n      <Hidden mdDown>\n        <Drawer\n          anchor=\"left\"\n          classes={{ paper: classes.desktopDrawer }}\n          open // luôn luôn hiện Drawer\n          variant=\"persistent\" // kiểu persistent không có lớp phủ mờ khi hiện drawer\n        >\n          {content}\n        </Drawer>\n      </Hidden>\n\n    </>\n  );\n};\n\nNavBar.propTypes = {\n  onMobileClose: PropTypes.func,\n  openMobile: PropTypes.bool\n};\n\nNavBar.defaultProps = {\n  onMobileClose: () => { },\n  openMobile: false\n};\n\n// export default NavBar;\n\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  AppBar,\n  Badge,\n  Box,\n  Hidden,\n  IconButton,\n  Toolbar,\n} from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport NotificationsIcon from '@material-ui/icons/NotificationsOutlined';\nimport InputIcon from '@material-ui/icons/Input';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from \"react-router-dom\";\n\nimport { LOGOUT } from '../../reducers/constants/Auth';\nimport { LOADING_BACKTO_HOME } from '../../reducers/constants/Lazy';\nconst TopBar = ({\n  onMobileNavOpen,\n  ...rest\n}) => {\n  const [notifications] = useState([]);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const handleClickLogo = () => {\n    dispatch({ type: LOADING_BACKTO_HOME })\n    setTimeout(() => {\n      history.push(\"/\", \"\")\n    }, 50);\n  }\n  return (\n\n    // đây là phần header trên cùng\n    <AppBar\n      elevation={0}\n      position=\"static\"\n      {...rest}\n    >\n      <Toolbar>\n        <div onClick={handleClickLogo} style={{ cursor: \"pointer\" }}>\n          <img src=\"/img/headTixLogo.png\" alt=\"logo\" style={{ height: 50 }} />\n        </div>\n\n        {/* 1 thẻ div chiếm hết khoảng trống còn lại dể dồn các icon về 2 bên */}\n        <Box flexGrow={1} />\n\n        {/* cái icon chuông và đăng xuất */}\n        <Hidden mdDown>\n          <IconButton color=\"inherit\">\n            <Badge\n              badgeContent={notifications.length}\n              color=\"primary\"\n              variant=\"dot\"\n            >\n              <NotificationsIcon />\n            </Badge>\n          </IconButton>\n          <Tooltip title=\"Đăng xuất\">\n            <IconButton color=\"inherit\" onClick={() => dispatch({ type: LOGOUT })}>\n              <InputIcon />\n            </IconButton>\n          </Tooltip>\n        </Hidden>\n\n        {/* cái icon menu */}\n        <Hidden lgUp>\n          <IconButton\n            color=\"inherit\"\n            // nếu click thì thực hiện func đóng mở Nav được truyền vào từ cha\n            onClick={onMobileNavOpen}\n          >\n            <MenuIcon />\n          </IconButton>\n        </Hidden>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\n// báo lỗi nếu kiểu dữ liệu truyền vào props không đúng với yều cầu bên dưới\nTopBar.propTypes = {\n  className: PropTypes.string,\n  onMobileNavOpen: PropTypes.func\n};\n\nexport default TopBar;\n\n","\nimport React, { useState } from 'react';\n\nimport { SnackbarProvider } from 'notistack';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useSelector } from \"react-redux\";\n\nimport NavBar from './NavBar';\nimport TopBar from './TopBar';\n\nexport default function AdminLayout(props) {\n  const [isMobileNavOpen, setMobileNavOpen] = useState(false);\n  const isMobile = useMediaQuery('(max-width:768px)');\n  const { currentUser } = useSelector((state) => state.authReducer);\n  if (currentUser?.maLoaiNguoiDung !== \"QuanTri\") { // nếu không phải tài khoản quản trị thì ẩn đi giao diện AdminLayout, vẫn truyền vào children để hiện thông báo trong children\n    return <>{props.children}</>\n  }\n  return (\n    // package notistack: popup thông báo nhỏ gọn\n    <SnackbarProvider maxSnack={3}>\n      <TopBar onMobileNavOpen={() => setMobileNavOpen(true)} />\n      <div className=\"row\">\n        <div style={{ width: 255 }}>\n          {/* đây là phần NavBar nằm bên trái, có thể đóng mở khi màn hình nhỏ */}\n          <NavBar\n            onMobileClose={() => setMobileNavOpen(false)}\n            openMobile={isMobileNavOpen}\n          />\n        </div>\n        <div style={{ width: isMobile ? \"100%\" : \"calc(100% - 255px)\" }}>\n          {/* đây là nội dung chính: UserManagement, MoviesManagement, ReateShowtime */}\n          {props.children}\n        </div>\n      </div>\n    </SnackbarProvider>\n  )\n}\n\n"],"names":["useStyles","makeStyles","theme","item","display","paddingTop","paddingBottom","position","zIndex","button","color","palette","text","secondary","fontWeight","typography","fontWeightMedium","justifyContent","letterSpacing","padding","textTransform","width","icon","marginRight","spacing","title","active","primary","main","className","href","Icon","rest","isExistUserModified","useSelector","state","usersManagementReducer","classes","history","useHistory","location","useLocation","ListItem","clsx","disableGutters","Button","pathname","onClick","Swal","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","then","result","isConfirmed","push","size","items","MovieIcon","PeopleAltIcon","PostAddIcon","mobileDrawer","desktopDrawer","top","height","avatar","cursor","NavBar","onMobileClose","openMobile","currentUser","authReducer","useEffect","user","FAKE_AVATAR","jobTitle","name","hoTen","content","Box","flexDirection","alignItems","p","Tooltip","Avatar","src","Typography","variant","Divider","List","map","Hidden","lgUp","Drawer","anchor","paper","onClose","open","mdDown","defaultProps","onMobileNavOpen","useState","notifications","dispatch","useDispatch","AppBar","elevation","Toolbar","type","LOADING_BACKTO_HOME","setTimeout","style","alt","flexGrow","IconButton","Badge","badgeContent","length","LOGOUT","Input","Menu","AdminLayout","props","isMobileNavOpen","setMobileNavOpen","isMobile","useMediaQuery","maLoaiNguoiDung","children","maxSnack"],"sourceRoot":""}